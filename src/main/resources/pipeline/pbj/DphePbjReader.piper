set SetJavaHome=no

// Write nice big banners when ctakes starts and finishes.
set WriteBanner=yes

//
// Start the Artemis broker and pause 5 seconds.
//
// Important: You must create an Artemis Broker before running.
// See "Creating a Broker Instance" at https://activemq.apache.org/components/artemis/documentation/1.0.0/running-server.html
// The ArtemisBroker must point to the directory of the broker that you create.
//
add ArtemisStarter Pause=5

//
// Start another instance of cTAKES, running the pipeline in DpheDocProcessor.piper
// $OutputDirectory will substitute the value of this cTAKES pipeline's value for OutputDirectory.
// $ArtemisBroker will substitute the value of this cTAKES pipeline's value for ArtemisBroker.
//
// This will NOT handle Patients.  Would need to create a special SendPatientDocCounts AE
// that grabs patient counts from PatientNoteCollector and sends them to a Summarizer process.
// All pipelines would send their doc cases to the Summarizer process.
//
add CtakesRunner Pipeline="-p DpheDocProcessor -o $OutputDirectory -a $ArtemisBroker"
add CtakesRunner Pipeline="-p DpheDocProcessor -o $OutputDirectory -a $ArtemisBroker"
add CtakesRunner Pipeline="-p DpheDocProcessor -o $OutputDirectory -a $ArtemisBroker"

// Pipeline to take care of summarization, correctly handling patients.
add CtakesRunner Pipeline="-p DpheSummaryProcessor -o $OutputDirectory -a $ArtemisBroker"

//  Ignore dos/windows carriage return characters when reading files.
set CRtoSpace=true

// Read documents from a zip file
reader ZipFileTreeReader

// Need an AE that sends patient doc count updates
//add PbjPatientCountSender SendQueue=DocCountQueue SendStop=no

// Send CAS to Artemis at the specified queue.  Don't send stop signal when processing has finished.
add PbjJmsSender SendQueue=DocQueue SendStop=no
